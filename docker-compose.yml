services:
  app:
    build: 
      context: .
      dockerfile: qr-service/Dockerfile
    ports:
      - "0.0.0.0:3000:3000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/src/app/frontend:ro
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    environment:
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 